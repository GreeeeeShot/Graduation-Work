● 알파-포괄도 변환 개요
- 픽셀 셰이더 내부의 clip 함수는 픽셀 전체를 허용 또는 폐기하기 때문에 텍스처의 외곽 부분에 계단 현상이 발생하게 된다.
- 이를 해결하기 위해서 투명도 혼합을 사용할 수 있겠지만, 거리에 따른 정렬을 해야하므로 추가부담이 발생한다.
- MSAA는 텍스처가 입혀진 사각형의 가장자리만 살펴볼 뿐 텍스처의 유의미한 부분의 외곽 부분을 살펴보진 않는다.





● 알파-포괄도 변환
- Direct3D가 포괄도 계산 시 알파 채널을 고려하게 만들어 외곽 부분의 계단 현상을 방지하는 것.
- 이때, MSAA가ㅏ 활성화되어 있고 알파-포괄도 변환도 활성화되어 있으면(ID3D11BlendState의 한 멤버로 설정.)
하드웨어는 픽셀 셰이더가 돌려준 알파 값을 이용해서 부분 픽셀의 포괄도를 결정한다. => 픽셀 셰이더 이후에 실행되는 듯?
ex. 4X MSAA에서 픽셀 셰이더가 돌려준 알파 값이 0.5이면 가장자리 픽셀의 네 부분픽셀 중 두 개가 텍스처의 유의미한 부분 이미지 안쪽에 있는 셈이 되며,
결과적으로 가장자리가 매끄러워진다.





● 알파-포괄도 변환을 활성화하는 혼합 상태 객체 생성
- 이때, 
코드.
D3D11_BLEND_DESC alphaToCoverageDesc = {0};
alphaToCoverageDesc.AlphaToCoverageEnable = true;
alphaToCoverageDesc.IndependentBlendEnable = false;
alphaToCoverageDesc.RenderTarget[0].BlendEnable = false;
alphaToCoverageDesc.RenderTarget[0].RenderTargetWriteMask = D3D11_COLOR_WRITE_ENABLE_ALL;

ID3D11BlendState* AlphaToCoverageBS;
HR(device->CreateBlendState(&alphaToCoverageDesc, &AlphaToCoverageBS));


